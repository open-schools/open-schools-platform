name: Prod Deploy
on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    uses: open-schools/open-schools-platform/.github/workflows/django.yml@dev
    secrets:
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      SMS_API_KEY: ${{ secrets.SMS_API_KEY }}
      EMAIL_ID: ${{ secrets.EMAIL_ID }}
      EMAIL_PRIVATE_API_KEY: ${{ secrets.EMAIL_PRIVATE_API_KEY }}
      GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      YANDEX_CLIENT_DOCS_BUCKET_NAME: ${{ secrets.YANDEX_CLIENT_DOCS_BUCKET_NAME }}
      FCM_SERVER_KEY: ${{ secrets.FCM_SERVER_KEY }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      FIREBASE_CLIENT_CERT_URL: ${{ secrets.FIREBASE_CLIENT_CERT_URL }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Prod deploy open-schools-platform
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{secrets.PROD_HOST}}
          user: "root"
          private_key: ${{secrets.PROD_PRIVATE_KEY}}
          command: |
            echo '--- START WORK ON REMOTE SERVER ---';
            set -e;
            
            echo '--- CD ---';
            cd /opt/open-schools-platform;
            
            echo '--- CHECKOUT ON BRANCH ---';
            git checkout main;
            
            echo '--- Upgrade repo ---';
            git pull;
            
            echo '--- Create prod image ---';
            docker build -f docker/prod.Dockerfile -t django-prod .;

            echo '--- Create local image ---';
            docker build -f docker/local.Dockerfile -t django-local .;
            
            echo '--- Force updating services ---';
            sh force-update-services.sh "prod";

            echo '--- Success! ---';